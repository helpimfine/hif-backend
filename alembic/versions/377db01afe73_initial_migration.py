"""Initial migration

Revision ID: 377db01afe73
Revises: 
Create Date: 2023-10-05 17:30:39.718252

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '377db01afe73'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('art',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('original', 'ai', name='arttype'), nullable=True),
    sa.Column('dominant_color', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['art.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_art_type_date', 'art', ['type', 'date_created'], unique=False)
    op.create_index('idx_dominant_color_gin', 'art', ['dominant_color'], unique=False, postgresql_using='gin')
    op.create_index('idx_tags_gin', 'art', ['tags'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_art_title'), 'art', ['title'], unique=False)
    op.create_index(op.f('ix_art_type'), 'art', ['type'], unique=False)
    op.create_table('audio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('mix', 'playlist', name='audiotype'), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audio_type_date', 'audio', ['type', 'date_created'], unique=False)
    op.create_index(op.f('ix_audio_title'), 'audio', ['title'], unique=False)
    op.create_index(op.f('ix_audio_type'), 'audio', ['type'], unique=False)
    op.create_table('art_audio_link',
    sa.Column('art_id', sa.Integer(), nullable=True),
    sa.Column('audio_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], ),
    sa.ForeignKeyConstraint(['audio_id'], ['audio.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('art_audio_link')
    op.drop_index(op.f('ix_audio_type'), table_name='audio')
    op.drop_index(op.f('ix_audio_title'), table_name='audio')
    op.drop_index('idx_audio_type_date', table_name='audio')
    op.drop_table('audio')
    op.drop_index(op.f('ix_art_type'), table_name='art')
    op.drop_index(op.f('ix_art_title'), table_name='art')
    op.drop_index('idx_tags_gin', table_name='art', postgresql_using='gin')
    op.drop_index('idx_dominant_color_gin', table_name='art', postgresql_using='gin')
    op.drop_index('idx_art_type_date', table_name='art')
    op.drop_table('art')
    # ### end Alembic commands ###
